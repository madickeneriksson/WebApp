@model ContactformViewModel
@{
    ViewData["Title"] = "kontaktformulär";
}
<section class="contact-form">
    <div class="container">
        <div class="title">Write something</div>
          <div asp-validation-summary="ModelOnly" class="form-group error"></div>
        <form asp-action="index" method="post" novalidate>
            <div class="form-group">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control">
                <span asp-validation-for="Name" class="error"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control">
                <span asp-validation-for="Email" class="error"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="form-label"></label>
                <input asp-for="PhoneNumber" class="form-control">
                <span asp-validation-for="PhoneNumber" class="error"></span>
            </div>
            <div class="form-group">
                <label asp-for="Company" class="form-label"></label>
                <input asp-for="Company" class="form-control">
                <span asp-validation-for="Company" class="error"></span>
            </div>
            <div class="form-group">
                <label asp-for="Message" class="form-label"></label>
                <input asp-for="Message" class="form-control">
                <span asp-validation-for="Message" class="error"></span>
            </div>
            <div class="terms form-checkbox-group">
                <label class="custom-checkbox">
                    Save my name, email in the this browser for the next time I comment.
                    <input type="checkbox" checked="checked">
                    <span class="checkmark"></span>
                </label>
            </div>
            <button type="submit" class="btn-theme">Submit</button>
        </form>
    </div>
</section>

<script>
    const form = document.querySelector('form');
    form.addEventListener('submit', validateForm);

    function validateForm(event) {
        event.preventDefault();

        const inputs = document.querySelectorAll('input');

        resetValidation();

        let isValid = true;

        inputs.forEach(input => {
            const errorElement = input.nextElementSibling;
            const inputValue = input.value.trim();

            if (inputValue === '') {
                showError(input, errorElement, 'Fältet får inte vara tomt.');
                isValid = false;
            }
        });
        if (isValid) {
            form.submit();
        }
    }

    function showError(input, errorElement, errorMessage) {
        input.classList.add('error');
        errorElement.textContent = errorMessage;
        errorElement.style.display = 'block';
    }

    function resetValidation() {
        const errorElements = document.querySelectorAll('.error');

        errorElements.forEach(errorElement => {
            const input = errorElement.previousElementSibling;
            input.classList.remove('error');
            errorElement.textContent = '';
            errorElement.style.display = 'none';
        });
    }
</script>
